# Generated by Django 5.2.4 on 2025-08-06 08:30

import django.db.models.deletion
import manager.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("manager", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SlaveOnlyZone",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "origin",
                    models.CharField(
                        help_text="Zone origin (e.g., example.com.)",
                        max_length=255,
                        unique=True,
                        validators=[manager.models.validate_origin],
                    ),
                ),
                (
                    "external_master",
                    models.CharField(
                        help_text="External master server hostname or IP address",
                        max_length=255,
                        validators=[manager.models.validate_dns_hostname],
                    ),
                ),
                (
                    "is_dirty",
                    models.BooleanField(
                        default=False, help_text="Zone configuration has pending changes that need to be synchronized"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="slave_only_zones", to="auth.group"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owned_slave_only_zones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "slave_servers",
                    models.ManyToManyField(
                        help_text="Slave DNS servers for this zone",
                        related_name="slave_only_zones",
                        to="manager.server",
                    ),
                ),
            ],
            options={
                "verbose_name": "Slave Only Zone",
                "verbose_name_plural": "Slave Only Zones",
                "ordering": ["origin"],
                "permissions": [("sync_slave_only_zone", "Can synchronize slave only zone to DNS server")],
            },
        ),
        migrations.CreateModel(
            name="SOA",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        default="@",
                        help_text="SOA record name (usually @)",
                        max_length=255,
                        validators=[manager.models.validate_dns_name],
                    ),
                ),
                ("rrclass", models.CharField(choices=[("IN", "IN")], db_column="class", default="IN", max_length=2)),
                ("ttl", models.PositiveIntegerField(default=3600, help_text="SOA record TTL in seconds")),
                (
                    "mname",
                    models.CharField(
                        help_text="Primary name server", max_length=255, validators=[manager.models.validate_dns_name]
                    ),
                ),
                (
                    "rname",
                    models.CharField(
                        help_text="Responsible person email (replace @ with .)",
                        max_length=255,
                        validators=[manager.models.validate_dns_name],
                    ),
                ),
                ("serial", models.PositiveBigIntegerField(help_text="Zone serial number")),
                ("refresh", models.PositiveIntegerField(default=86400, help_text="Refresh interval in seconds")),
                ("retry", models.PositiveIntegerField(default=7200, help_text="Retry interval in seconds")),
                ("expire", models.PositiveIntegerField(default=3600000, help_text="Expire time in seconds")),
                ("minimum", models.PositiveIntegerField(default=172800, help_text="Minimum TTL in seconds")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "zone",
                    models.OneToOneField(
                        help_text="Zone this SOA record belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="soa",
                        to="manager.zone",
                    ),
                ),
            ],
            options={
                "verbose_name": "SOA Record",
                "verbose_name_plural": "SOA Records",
            },
        ),
    ]
